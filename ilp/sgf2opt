#! /bin/bash

# sgf2opt - starts with an sgf file and finds orderings that minimize two
# distinct objectives; three different optimizations are done: first
# objective alone, second objective alone, and second given the optimum value
# of first as a constraint.

# assumes sgf2ilp.py and sol2sgf.py are in this directory

if [ $# -ne 2 ]; then
    echo "Usage: $0 (-tb | -ts | -bt | -bs | -st | -sb ) FILE.sgf"
    echo " produces files of the form, in the same directory as the input"
    echo "  FILE-TAG.lp (ILP for the appropriate problem)"
    echo "  FILE-TAG.out (the cplex output when the ILP is solved)"
    echo "  FILE-opt_TAG.sgf, (the sgf file with the optimum order)"
    echo " -xy means minimize x then y and then y given the minimum x"
    echo " TAG is one of t, b, s, tk_b, tk_s, bk_t, bk_s, sk_t or sk_b"
    echo "  x (t,b,s) means x is minimized with no constraints"
    echo "  xk_y means y is minimized given that the x has (minimum) value k"
    exit 1
fi

# python scripts are in same directory as this one
script_dir=${0%/*}

objective=$1
# peel off the -
objective=${objective#-}
first_obj=${objective:0:1}
second_obj=${objective:1:1}
shift
input_sgf_file=$1
input_base=${input_sgf_file%.sgf}

# minimize the first objective
cplex_input_file=${input_base}-$first_obj.lp
cplex_output_file=${input_base}-$first_obj.out
sgf_output_file=${input_base}-$first_obj.sgf
echo "--------------------------------------------------------------------"
echo "creating ILP, objective is $first_obj, input file is $input_sgf_file"
if [ "$first_obj" = "t" ]; then
    $script_dir/sgf2ilp.py -2 -1 -1 < $input_sgf_file > $cplex_input_file
elif [ "$first_obj" = "b" ]; then
    $script_dir/sgf2ilp.py -1 -2 -1 < $input_sgf_file > $cplex_input_file
elif [ "$first_obj" = "s" ]; then
    $script_dir/sgf2ilp.py -1 -1 -2 < $input_sgf_file > $cplex_input_file
else
    echo "bad first objective: $first_obj"
    exit
fi
echo "solving the ILP using CPLEX"
date -u
cplex_ilp -solution $cplex_input_file > $cplex_output_file
echo "done solving $cplex_input_file"
date -u
echo "converting solution to sgf for optimal order"
$script_dir/sol2sgf.py < $cplex_output_file > $sgf_output_file

# get the minimum value for the first objective
min_first_obj=`fgrep Objective $cplex_output_file | cut -f 2`
echo "minimum value for $first_obj is $min_first_obj"

# minimize the second objective
cplex_input_file=${input_base}-$second_obj.lp
cplex_output_file=${input_base}-$second_obj.out
sgf_output_file=${input_base}-$second_obj.sgf
echo "creating ILP, objective is $second_obj, input file is $input_sgf_file"
if [ "$second_obj" = "t" ]; then
    $script_dir/sgf2ilp.py -2 -1 -1 < $input_sgf_file > $cplex_input_file
elif [ "$second_obj" = "b" ]; then
    $script_dir/sgf2ilp.py -1 -2 -1 < $input_sgf_file > $cplex_input_file
elif [ "$second_obj" = "s" ]; then
    $script_dir/sgf2ilp.py -1 -1 -2 < $input_sgf_file > $cplex_input_file
else
    echo "bad second objective: $second_obj"
    exit
fi
echo "solving the ILP using CPLEX"
date -u
cplex_ilp -solution $cplex_input_file > $cplex_output_file
echo "done solving $cplex_input_file"
date -u
echo "converting solution to sgf for optimal order"
$script_dir/sol2sgf.py < $cplex_output_file > $sgf_output_file
# get the minimum value for the second objective (for comparison purposes)
min_second_obj=`fgrep Objective $cplex_output_file | cut -f 2`
echo "minimum value for $second_obj is $min_second_obj"

# minimize second objective given minimum first objective as a constraint
cplex_input_file=${input_base}-${first_obj}${min_first_obj}$_second_obj.lp
cplex_output_file=${input_base}-${first_obj}${min_first_obj}$_second_obj.out
sgf_output_file=${input_base}-${first_obj}${min_first_obj}_$second_obj.sgf
echo "creating ILP, objective is $second_obj, input file is $input_sgf_file"
echo "use min value of first objective $first_obj = $min_first_obj as constraint"
# give default values to the three command-line args
arg1=-1
arg2=-1
arg3=-1
if [ "$first_obj" = "t" ]; then
    arg1=$min_first_obj
elif [ "$first_obj" = "b" ]; then
    arg2=$min_first_obj
elif [ "$second_obj" = "s" ]; then
    arg3=$min_first_obj
fi
if [ "$second_obj" = "t" ]; then
    arg1=-2
elif [ "$second_obj" = "b" ]; then
    arg2=-2
elif [ "$second_obj" = "s" ]; then
    arg3=-2
fi
echo "creating ILP, objective is $second_obj, using $first_obj = $min_first_obj"
$script_dir/sgf2ilp.py $arg1 $arg2 $arg3 < $input_sgf_file > $cplex_input_file
echo "solving the ILP using CPLEX"
date -u
cplex_ilp -solution $cplex_input_file > $cplex_output_file
echo "done solving $cplex_input_file"
date -u
echo "converting solution to sgf for optimal order"
$script_dir/sol2sgf.py < $cplex_output_file > $sgf_output_file
# get the minimum value for the conditional second objective (for comparison
# purposes)
conditional_min_second_obj=`fgrep Objective $cplex_output_file | cut -f 2`
echo "minimum value for $second_obj given $first_obj = $min_first_obj is $conditional_min_second_obj"

# compare these as strings because bash does not handle floats
if [ "$min_second_obj" != "$conditional_min_second_obj" ]; then
    echo "*+*+* $input_base: objectives differ: $second_obj is $min_second_obj, $second_obj given $first_obj = $min_first_obj is $conditional_min_second_obj *+*+*"
fi
echo "--------------------------------------------------------------------"
echo

#  [Last modified: 2016 04 29 at 12:54:26 GMT]
